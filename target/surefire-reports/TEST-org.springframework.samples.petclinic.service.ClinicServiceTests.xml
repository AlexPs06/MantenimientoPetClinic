<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="org.springframework.samples.petclinic.service.ClinicServiceTests" time="4.961" tests="11" errors="11" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\likan\Documents\GitHub\Petclinic4A\target\test-classes;C:\Users\likan\Documents\GitHub\Petclinic4A\target\classes;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-actuator-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-logging-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\likan\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\likan\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.1\log4j-to-slf4j-2.11.1.jar;C:\Users\likan\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.1\log4j-api-2.11.1.jar;C:\Users\likan\.m2\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;C:\Users\likan\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\likan\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\2.1.0.BUILD-SNAPSHOT\spring-boot-actuator-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-actuator\2.1.0.BUILD-SNAPSHOT\spring-boot-actuator-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.7\jackson-databind-2.9.7.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.7\jackson-datatype-jsr310-2.9.7.jar;C:\Users\likan\.m2\repository\io\micrometer\micrometer-core\1.1.0\micrometer-core-1.1.0.jar;C:\Users\likan\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.9\HdrHistogram-2.1.9.jar;C:\Users\likan\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-cache\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-cache-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\spring-context\5.1.2.RELEASE\spring-context-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-aop\5.1.2.RELEASE\spring-aop-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-beans\5.1.2.RELEASE\spring-beans-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-expression\5.1.2.RELEASE\spring-expression-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-context-support\5.1.2.RELEASE\spring-context-support-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-data-jpa-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-aop-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\aspectj\aspectjweaver\1.9.2\aspectjweaver-1.9.2.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-jdbc-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\com\zaxxer\HikariCP\3.2.0\HikariCP-3.2.0.jar;C:\Users\likan\.m2\repository\org\springframework\spring-jdbc\5.1.2.RELEASE\spring-jdbc-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\javax\transaction\javax.transaction-api\1.3\javax.transaction-api-1.3.jar;C:\Users\likan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\likan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\likan\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\likan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\likan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\likan\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\likan\.m2\repository\net\bytebuddy\byte-buddy\1.9.3\byte-buddy-1.9.3.jar;C:\Users\likan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\likan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\likan\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\likan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\likan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\likan\.m2\repository\org\springframework\data\spring-data-jpa\2.1.2.RELEASE\spring-data-jpa-2.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\data\spring-data-commons\2.1.2.RELEASE\spring-data-commons-2.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-orm\5.1.2.RELEASE\spring-orm-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-tx\5.1.2.RELEASE\spring-tx-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-aspects\5.1.2.RELEASE\spring-aspects-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-web-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-json-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.7\jackson-datatype-jdk8-2.9.7.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.7\jackson-module-parameter-names-2.9.7.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-tomcat-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.12\tomcat-embed-core-9.0.12.jar;C:\Users\likan\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.12\tomcat-embed-el-9.0.12.jar;C:\Users\likan\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.12\tomcat-embed-websocket-9.0.12.jar;C:\Users\likan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.13.Final\hibernate-validator-6.0.13.Final.jar;C:\Users\likan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\likan\.m2\repository\org\springframework\spring-web\5.1.2.RELEASE\spring-web-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-webmvc\5.1.2.RELEASE\spring-webmvc-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-thymeleaf-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\likan\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\likan\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\likan\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\likan\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.1.RELEASE\thymeleaf-extras-java8time-3.0.1.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-test-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-test\2.1.0.BUILD-SNAPSHOT\spring-boot-test-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.0.BUILD-SNAPSHOT\spring-boot-test-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\likan\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\likan\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\likan\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\likan\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\likan\.m2\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\likan\.m2\repository\org\mockito\mockito-core\2.23.0\mockito-core-2.23.0.jar;C:\Users\likan\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.3\byte-buddy-agent-1.9.3.jar;C:\Users\likan\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\likan\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\likan\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\likan\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\likan\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\likan\.m2\repository\org\springframework\spring-core\5.1.2.RELEASE\spring-core-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-jcl\5.1.2.RELEASE\spring-jcl-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-test\5.1.2.RELEASE\spring-test-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;C:\Users\likan\.m2\repository\org\hsqldb\hsqldb\2.4.1\hsqldb-2.4.1.jar;C:\Users\likan\.m2\repository\mysql\mysql-connector-java\8.0.13\mysql-connector-java-8.0.13.jar;C:\Users\likan\.m2\repository\javax\cache\cache-api\1.1.0\cache-api-1.1.0.jar;C:\Users\likan\.m2\repository\org\ehcache\ehcache\3.6.1\ehcache-3.6.1.jar;C:\Users\likan\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\likan\.m2\repository\org\webjars\webjars-locator-core\0.35\webjars-locator-core-0.35.jar;C:\Users\likan\.m2\repository\org\apache\commons\commons-lang3\3.8.1\commons-lang3-3.8.1.jar;C:\Users\likan\.m2\repository\org\apache\commons\commons-compress\1.9\commons-compress-1.9.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.7\jackson-core-2.9.7.jar;C:\Users\likan\.m2\repository\org\webjars\jquery\2.2.4\jquery-2.2.4.jar;C:\Users\likan\.m2\repository\org\webjars\jquery-ui\1.11.4\jquery-ui-1.11.4.jar;C:\Users\likan\.m2\repository\org\webjars\bootstrap\3.3.6\bootstrap-3.3.6.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-devtools\2.1.0.BUILD-SNAPSHOT\spring-boot-devtools-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot\2.1.0.BUILD-SNAPSHOT\spring-boot-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.0.BUILD-SNAPSHOT\spring-boot-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="America/Mexico_City"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Windows 10"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="MX"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_181\jre\bin"/>
    <property name="sun.java.command" value="C:\Users\likan\AppData\Local\Temp\surefire1190487372716789709\surefirebooter6828284930696815878.jar C:\Users\likan\AppData\Local\Temp\surefire1190487372716789709 2018-11-17T15-42-13_153-jvmRun1 surefire5828543016072084624tmp surefire_07416813085947153130tmp"/>
    <property name="surefire.test.class.path" value="C:\Users\likan\Documents\GitHub\Petclinic4A\target\test-classes;C:\Users\likan\Documents\GitHub\Petclinic4A\target\classes;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-actuator-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-logging-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\likan\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\likan\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.1\log4j-to-slf4j-2.11.1.jar;C:\Users\likan\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.1\log4j-api-2.11.1.jar;C:\Users\likan\.m2\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;C:\Users\likan\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\likan\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\2.1.0.BUILD-SNAPSHOT\spring-boot-actuator-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-actuator\2.1.0.BUILD-SNAPSHOT\spring-boot-actuator-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.7\jackson-databind-2.9.7.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.7\jackson-datatype-jsr310-2.9.7.jar;C:\Users\likan\.m2\repository\io\micrometer\micrometer-core\1.1.0\micrometer-core-1.1.0.jar;C:\Users\likan\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.9\HdrHistogram-2.1.9.jar;C:\Users\likan\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-cache\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-cache-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\spring-context\5.1.2.RELEASE\spring-context-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-aop\5.1.2.RELEASE\spring-aop-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-beans\5.1.2.RELEASE\spring-beans-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-expression\5.1.2.RELEASE\spring-expression-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-context-support\5.1.2.RELEASE\spring-context-support-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-data-jpa-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-aop-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\aspectj\aspectjweaver\1.9.2\aspectjweaver-1.9.2.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-jdbc-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\com\zaxxer\HikariCP\3.2.0\HikariCP-3.2.0.jar;C:\Users\likan\.m2\repository\org\springframework\spring-jdbc\5.1.2.RELEASE\spring-jdbc-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\javax\transaction\javax.transaction-api\1.3\javax.transaction-api-1.3.jar;C:\Users\likan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\likan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\likan\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\likan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\likan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\likan\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\likan\.m2\repository\net\bytebuddy\byte-buddy\1.9.3\byte-buddy-1.9.3.jar;C:\Users\likan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\likan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\likan\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\likan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\likan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\likan\.m2\repository\org\springframework\data\spring-data-jpa\2.1.2.RELEASE\spring-data-jpa-2.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\data\spring-data-commons\2.1.2.RELEASE\spring-data-commons-2.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-orm\5.1.2.RELEASE\spring-orm-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-tx\5.1.2.RELEASE\spring-tx-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-aspects\5.1.2.RELEASE\spring-aspects-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-web-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-json-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.7\jackson-datatype-jdk8-2.9.7.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.7\jackson-module-parameter-names-2.9.7.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-tomcat-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.12\tomcat-embed-core-9.0.12.jar;C:\Users\likan\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.12\tomcat-embed-el-9.0.12.jar;C:\Users\likan\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.12\tomcat-embed-websocket-9.0.12.jar;C:\Users\likan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.13.Final\hibernate-validator-6.0.13.Final.jar;C:\Users\likan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\likan\.m2\repository\org\springframework\spring-web\5.1.2.RELEASE\spring-web-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-webmvc\5.1.2.RELEASE\spring-webmvc-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-thymeleaf-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\likan\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\likan\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\likan\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\likan\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.1.RELEASE\thymeleaf-extras-java8time-3.0.1.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.1.0.BUILD-SNAPSHOT\spring-boot-starter-test-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-test\2.1.0.BUILD-SNAPSHOT\spring-boot-test-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.0.BUILD-SNAPSHOT\spring-boot-test-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\likan\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\likan\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\likan\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\likan\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\likan\.m2\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\likan\.m2\repository\org\mockito\mockito-core\2.23.0\mockito-core-2.23.0.jar;C:\Users\likan\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.3\byte-buddy-agent-1.9.3.jar;C:\Users\likan\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\likan\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\likan\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\likan\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\likan\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\likan\.m2\repository\org\springframework\spring-core\5.1.2.RELEASE\spring-core-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-jcl\5.1.2.RELEASE\spring-jcl-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\springframework\spring-test\5.1.2.RELEASE\spring-test-5.1.2.RELEASE.jar;C:\Users\likan\.m2\repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;C:\Users\likan\.m2\repository\org\hsqldb\hsqldb\2.4.1\hsqldb-2.4.1.jar;C:\Users\likan\.m2\repository\mysql\mysql-connector-java\8.0.13\mysql-connector-java-8.0.13.jar;C:\Users\likan\.m2\repository\javax\cache\cache-api\1.1.0\cache-api-1.1.0.jar;C:\Users\likan\.m2\repository\org\ehcache\ehcache\3.6.1\ehcache-3.6.1.jar;C:\Users\likan\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\likan\.m2\repository\org\webjars\webjars-locator-core\0.35\webjars-locator-core-0.35.jar;C:\Users\likan\.m2\repository\org\apache\commons\commons-lang3\3.8.1\commons-lang3-3.8.1.jar;C:\Users\likan\.m2\repository\org\apache\commons\commons-compress\1.9\commons-compress-1.9.jar;C:\Users\likan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.7\jackson-core-2.9.7.jar;C:\Users\likan\.m2\repository\org\webjars\jquery\2.2.4\jquery-2.2.4.jar;C:\Users\likan\.m2\repository\org\webjars\jquery-ui\1.11.4\jquery-ui-1.11.4.jar;C:\Users\likan\.m2\repository\org\webjars\bootstrap\3.3.6\bootstrap-3.3.6.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-devtools\2.1.0.BUILD-SNAPSHOT\spring-boot-devtools-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot\2.1.0.BUILD-SNAPSHOT\spring-boot-2.1.0.BUILD-SNAPSHOT.jar;C:\Users\likan\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.0.BUILD-SNAPSHOT\spring-boot-autoconfigure-2.1.0.BUILD-SNAPSHOT.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\likan"/>
    <property name="user.language" value="es"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_181\jre"/>
    <property name="basedir" value="C:\Users\likan\Documents\GitHub\Petclinic4A"/>
    <property name="file.separator" value="\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\likan\AppData\Local\Temp\surefire1190487372716789709\surefirebooter6828284930696815878.jar;C:\\Users\\likan\\.m2\\repository\\org\\jacoco\\org.jacoco.agent\\0.8.2\\org.jacoco.agent-0.8.2-runtime.jar"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\classes"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_181-b13"/>
    <property name="user.name" value="likan"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_181\jre\lib\endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="maven.ext.class.path" value="C:\Program Files\NetBeans 8.2\java\maven-nblib\netbeans-eventspy.jar"/>
    <property name="localRepository" value="C:\Users\likan\.m2\repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\likan\AppData\Local\Temp\"/>
    <property name="java.version" value="1.8.0_181"/>
    <property name="user.dir" value="C:\Users\likan\Documents\GitHub\Petclinic4A"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\xampp\php;C:\composer;C:\Users\likan\AppData\Local\Microsoft\WindowsApps;C:\Users\likan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\likan\AppData\Local\GitHubDesktop\bin;C:\Users\likan\AppData\Roaming\npm;C:\Users\likan\AppData\Local\atom\bin;C:\Users\likan\AppData\Roaming\Composer\vendor\bin;C:\Users\likan\AppData\Local\Microsoft\WindowsApps;C:\Program Files\heroku\bin;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.181-b13"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="shouldFindVets" classname="org.springframework.samples.petclinic.service.ClinicServiceTests" time="0.109">
    <error message="could not prepare statement; SQL [select vet0_.id as id1_6_, vet0_.first_name as first_na2_6_, vet0_.last_name as last_nam3_6_, vet0_.business_hours as business4_6_, vet0_.telephone as telephon5_6_ from vets vet0_]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement" type="org.springframework.dao.InvalidDataAccessResourceUsageException">org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select vet0_.id as id1_6_, vet0_.first_name as first_na2_6_, vet0_.last_name as last_nam3_6_, vet0_.business_hours as business4_6_, vet0_.telephone as telephon5_6_ from vets vet0_]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindVets(ClinicServiceTests.java:188)
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindVets(ClinicServiceTests.java:188)
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: VETS in statement [select vet0_.id as id1_6_, vet0_.first_name as first_na2_6_, vet0_.last_name as last_nam3_6_, vet0_.business_hours as business4_6_, vet0_.telephone as telephon5_6_ from vets vet0_]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindVets(ClinicServiceTests.java:188)
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: VETS
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindVets(ClinicServiceTests.java:188)
</error>
    <system-out><![CDATA[2018-11-17 15:42:37.957  INFO 8312 --- [           main] b.t.a.o.j.DataJpaTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.springframework.samples.petclinic.service.ClinicServiceTests], using SpringBootContextLoader
2018-11-17 15:42:37.957  INFO 8312 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.springframework.samples.petclinic.service.ClinicServiceTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-11-17 15:42:37.957  INFO 8312 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.springframework.samples.petclinic.service.ClinicServiceTests]: ClinicServiceTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-11-17 15:42:37.983  INFO 8312 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.springframework.samples.petclinic.PetClinicApplication for test class org.springframework.samples.petclinic.service.ClinicServiceTests
2018-11-17 15:42:37.984  INFO 8312 --- [           main] b.t.a.o.j.DataJpaTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-11-17 15:42:37.984  INFO 8312 --- [           main] b.t.a.o.j.DataJpaTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@298291ae, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2c15c243, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@14897087, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@37cda61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3ece2441, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3ccbfe01, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6399bc57, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@653cd97, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@49f00d30, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2aa8c9f9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@47db3ff, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1cdae992]


              |\      _,,,--,,_
             /,`.-'`'   ._  \-;;,_
  _______ __|,4-  ) )_   .;.(__`'-'__     ___ __    _ ___ _______
 |       | '---''(_/._)-'(_\_)   |   |   |   |  |  | |   |       |
 |    _  |    ___|_     _|       |   |   |   |   |_| |   |       | __ _ _
 |   |_| |   |___  |   | |       |   |   |   |       |   |       | \ \ \ \
 |    ___|    ___| |   | |      _|   |___|   |  _    |   |      _|  \ \ \ \
 |   |   |   |___  |   | |     |_|       |   | | |   |   |     |_    ) ) ) )
 |___|   |_______| |___| |_______|_______|___|_|  |__|___|_______|  / / / /
 ==================================================================/_/_/_/

:: Built with Spring Boot :: 2.1.0.BUILD-SNAPSHOT


2018-11-17 15:42:38.037  INFO 8312 --- [           main] o.s.s.p.service.ClinicServiceTests       : Starting ClinicServiceTests on LAPTOP-173L6VSH with PID 8312 (started by likan in C:\Users\likan\Documents\GitHub\Petclinic4A)
2018-11-17 15:42:38.038  INFO 8312 --- [           main] o.s.s.p.service.ClinicServiceTests       : No active profile set, falling back to default profiles: default
2018-11-17 15:42:38.181  INFO 8312 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2018-11-17 15:42:38.219  INFO 8312 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 38ms. Found 5 repository interfaces.
2018-11-17 15:42:38.230  INFO 8312 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2018-11-17 15:42:38.274  INFO 8312 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:hsqldb:mem:e9e30871-6d40-41ee-a5a0-b04eb2cb1890', username='sa'
2018-11-17 15:42:39.238  INFO 8312 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2018-11-17 15:42:39.333  INFO 8312 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2018-11-17 15:42:40.965  INFO 8312 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-11-17 15:42:42.239  INFO 8312 --- [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2018-11-17 15:42:43.047  INFO 8312 --- [           main] o.s.s.p.service.ClinicServiceTests       : Started ClinicServiceTests in 5.061 seconds (JVM running for 27.859)
2018-11-17 15:42:43.066  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@6a8aab16, testMethod = shouldFindVets@ClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@36c8bb53]; rollback [true]
Hibernate: select vet0_.id as id1_6_, vet0_.first_name as first_na2_6_, vet0_.last_name as last_nam3_6_, vet0_.business_hours as business4_6_, vet0_.telephone as telephon5_6_ from vets vet0_
2018-11-17 15:42:43.145  WARN 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: -5501, SQLState: 42501
2018-11-17 15:42:43.146 ERROR 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : usuario no tiene privilegios suficientes o objeto no encontrado: VETS in statement [select vet0_.id as id1_6_, vet0_.first_name as first_na2_6_, vet0_.last_name as last_nam3_6_, vet0_.business_hours as business4_6_, vet0_.telephone as telephon5_6_ from vets vet0_]
2018-11-17 15:42:43.157  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@6a8aab16, testMethod = shouldFindVets@ClinicServiceTests, testException = org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select vet0_.id as id1_6_, vet0_.first_name as first_na2_6_, vet0_.last_name as last_nam3_6_, vet0_.business_hours as business4_6_, vet0_.telephone as telephon5_6_ from vets vet0_]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement, mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  </testcase>
  <testcase name="shouldFindOwnersByLastName" classname="org.springframework.samples.petclinic.service.ClinicServiceTests" time="0.032">
    <error message="could not prepare statement; SQL [select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement" type="org.springframework.dao.InvalidDataAccessResourceUsageException">org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindOwnersByLastName(ClinicServiceTests.java:81)
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindOwnersByLastName(ClinicServiceTests.java:81)
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS in statement [select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindOwnersByLastName(ClinicServiceTests.java:81)
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindOwnersByLastName(ClinicServiceTests.java:81)
</error>
    <system-out><![CDATA[2018-11-17 15:42:43.162  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@274db586, testMethod = shouldFindOwnersByLastName@ClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@36c8bb53]; rollback [true]
Hibernate: select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
2018-11-17 15:42:43.187  WARN 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: -5501, SQLState: 42501
2018-11-17 15:42:43.187 ERROR 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS in statement [select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?]
2018-11-17 15:42:43.191  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@274db586, testMethod = shouldFindOwnersByLastName@ClinicServiceTests, testException = org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement, mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  </testcase>
  <testcase name="shouldAddNewVisitForPet" classname="org.springframework.samples.petclinic.service.ClinicServiceTests" time="0.045">
    <error message="could not prepare statement; SQL [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement" type="org.springframework.dao.InvalidDataAccessResourceUsageException">org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldAddNewVisitForPet(ClinicServiceTests.java:200)
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldAddNewVisitForPet(ClinicServiceTests.java:200)
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS in statement [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldAddNewVisitForPet(ClinicServiceTests.java:200)
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldAddNewVisitForPet(ClinicServiceTests.java:200)
</error>
    <system-out><![CDATA[2018-11-17 15:42:43.196  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@72a6ce36, testMethod = shouldAddNewVisitForPet@ClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@36c8bb53]; rollback [true]
Hibernate: select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
2018-11-17 15:42:43.210  WARN 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: -5501, SQLState: 42501
2018-11-17 15:42:43.212 ERROR 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : usuario no tiene privilegios suficientes o objeto no encontrado: PETS in statement [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]
2018-11-17 15:42:43.218  INFO 8312 --- [           main] o.h.e.internal.DefaultLoadEventListener  : HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: could not prepare statement

org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:182) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:148) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.prepareQueryStatement(AbstractLoadPlanBasedLoader.java:226) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:190) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:121) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:86) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:188) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4269) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:511) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:481) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:222) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:281) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:124) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:92) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1257) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.access$1900(SessionImpl.java:207) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2874) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2848) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3483) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3452) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308) [spring-orm-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at com.sun.proxy.$Proxy167.find(Unknown Source) [na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:234) [spring-data-jpa-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59) ~[spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) ~[spring-tx-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61) ~[spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at com.sun.proxy.$Proxy169.findById(Unknown Source) ~[na:na]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldAddNewVisitForPet(ClinicServiceTests.java:200) ~[test-classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) ~[surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) ~[surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) ~[surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) ~[surefire-booter-2.22.1.jar:2.22.1]
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS in statement [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.jdbc.JDBCPreparedStatement.<init>(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.jdbc.JDBCConnection.prepareStatement(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:146) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:172) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	... 87 common frames omitted
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS
	at org.hsqldb.error.Error.error(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.error.Error.error(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.readTableName(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.readTableOrSubquery(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadTableReference(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadFromClause(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadTableExpression(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQuerySpecification(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadSimpleTable(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryPrimary(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryTerm(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryExpressionBody(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryExpression(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.compileCursorSpecification(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserCommand.compilePart(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserCommand.compileStatement(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.Session.compileStatement(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.StatementManager.compile(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.Session.execute(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	... 91 common frames omitted

2018-11-17 15:42:43.221  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@72a6ce36, testMethod = shouldAddNewVisitForPet@ClinicServiceTests, testException = org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement, mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  </testcase>
  <testcase name="shouldUpdateOwner" classname="org.springframework.samples.petclinic.service.ClinicServiceTests" time="0.002">
    <error message="could not prepare statement; SQL [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement" type="org.springframework.dao.InvalidDataAccessResourceUsageException">org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldUpdateOwner(ClinicServiceTests.java:119)
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldUpdateOwner(ClinicServiceTests.java:119)
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS in statement [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldUpdateOwner(ClinicServiceTests.java:119)
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldUpdateOwner(ClinicServiceTests.java:119)
</error>
    <system-out><![CDATA[2018-11-17 15:42:43.223  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@166dd3f0, testMethod = shouldUpdateOwner@ClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@36c8bb53]; rollback [true]
Hibernate: select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
2018-11-17 15:42:43.227  WARN 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: -5501, SQLState: 42501
2018-11-17 15:42:43.227 ERROR 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS in statement [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]
2018-11-17 15:42:43.228  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@166dd3f0, testMethod = shouldUpdateOwner@ClinicServiceTests, testException = org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement, mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  </testcase>
  <testcase name="shouldFindVisitsByPetId" classname="org.springframework.samples.petclinic.service.ClinicServiceTests" time="0.016">
    <error message="could not prepare statement; SQL [select visit0_.id as id1_7_, visit0_.visit_date as visit_da2_7_, visit0_.description as descript3_7_, visit0_.pet_id as pet_id4_7_ from visits visit0_ where visit0_.pet_id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement" type="org.springframework.dao.InvalidDataAccessResourceUsageException">org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select visit0_.id as id1_7_, visit0_.visit_date as visit_da2_7_, visit0_.description as descript3_7_, visit0_.pet_id as pet_id4_7_ from visits visit0_ where visit0_.pet_id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindVisitsByPetId(ClinicServiceTests.java:215)
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindVisitsByPetId(ClinicServiceTests.java:215)
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: VISITS in statement [select visit0_.id as id1_7_, visit0_.visit_date as visit_da2_7_, visit0_.description as descript3_7_, visit0_.pet_id as pet_id4_7_ from visits visit0_ where visit0_.pet_id=?]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindVisitsByPetId(ClinicServiceTests.java:215)
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: VISITS
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindVisitsByPetId(ClinicServiceTests.java:215)
</error>
    <system-out><![CDATA[2018-11-17 15:42:43.233  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@7a797b57, testMethod = shouldFindVisitsByPetId@ClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@36c8bb53]; rollback [true]
Hibernate: select visit0_.id as id1_7_, visit0_.visit_date as visit_da2_7_, visit0_.description as descript3_7_, visit0_.pet_id as pet_id4_7_ from visits visit0_ where visit0_.pet_id=?
2018-11-17 15:42:43.251  WARN 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: -5501, SQLState: 42501
2018-11-17 15:42:43.252 ERROR 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : usuario no tiene privilegios suficientes o objeto no encontrado: VISITS in statement [select visit0_.id as id1_7_, visit0_.visit_date as visit_da2_7_, visit0_.description as descript3_7_, visit0_.pet_id as pet_id4_7_ from visits visit0_ where visit0_.pet_id=?]
2018-11-17 15:42:43.256  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@7a797b57, testMethod = shouldFindVisitsByPetId@ClinicServiceTests, testException = org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select visit0_.id as id1_7_, visit0_.visit_date as visit_da2_7_, visit0_.description as descript3_7_, visit0_.pet_id as pet_id4_7_ from visits visit0_ where visit0_.pet_id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement, mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  </testcase>
  <testcase name="shouldInsertPetIntoDatabaseAndGenerateId" classname="org.springframework.samples.petclinic.service.ClinicServiceTests" time="0.018">
    <error message="could not prepare statement; SQL [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement" type="org.springframework.dao.InvalidDataAccessResourceUsageException">org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldInsertPetIntoDatabaseAndGenerateId(ClinicServiceTests.java:152)
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldInsertPetIntoDatabaseAndGenerateId(ClinicServiceTests.java:152)
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS in statement [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldInsertPetIntoDatabaseAndGenerateId(ClinicServiceTests.java:152)
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldInsertPetIntoDatabaseAndGenerateId(ClinicServiceTests.java:152)
</error>
    <system-out><![CDATA[2018-11-17 15:42:43.261  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@1deb4c2e, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@ClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@36c8bb53]; rollback [true]
Hibernate: select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
2018-11-17 15:42:43.265  WARN 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: -5501, SQLState: 42501
2018-11-17 15:42:43.265 ERROR 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS in statement [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]
2018-11-17 15:42:43.267  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@1deb4c2e, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@ClinicServiceTests, testException = org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement, mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  </testcase>
  <testcase name="shouldInsertOwner" classname="org.springframework.samples.petclinic.service.ClinicServiceTests" time="0.019">
    <error message="could not prepare statement; SQL [select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement" type="org.springframework.dao.InvalidDataAccessResourceUsageException">org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldInsertOwner(ClinicServiceTests.java:100)
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldInsertOwner(ClinicServiceTests.java:100)
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS in statement [select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldInsertOwner(ClinicServiceTests.java:100)
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldInsertOwner(ClinicServiceTests.java:100)
</error>
    <system-out><![CDATA[2018-11-17 15:42:43.272  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@654af00c, testMethod = shouldInsertOwner@ClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@36c8bb53]; rollback [true]
Hibernate: select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
2018-11-17 15:42:43.276  WARN 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: -5501, SQLState: 42501
2018-11-17 15:42:43.276 ERROR 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS in statement [select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?]
2018-11-17 15:42:43.279  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@654af00c, testMethod = shouldInsertOwner@ClinicServiceTests, testException = org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select distinct owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement, mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  </testcase>
  <testcase name="shouldFindSingleOwnerWithPet" classname="org.springframework.samples.petclinic.service.ClinicServiceTests" time="0.007">
    <error message="could not prepare statement; SQL [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement" type="org.springframework.dao.InvalidDataAccessResourceUsageException">org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindSingleOwnerWithPet(ClinicServiceTests.java:90)
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindSingleOwnerWithPet(ClinicServiceTests.java:90)
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS in statement [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindSingleOwnerWithPet(ClinicServiceTests.java:90)
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindSingleOwnerWithPet(ClinicServiceTests.java:90)
</error>
    <system-out><![CDATA[2018-11-17 15:42:43.287  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@724cc353, testMethod = shouldFindSingleOwnerWithPet@ClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@36c8bb53]; rollback [true]
Hibernate: select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
2018-11-17 15:42:43.294  WARN 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: -5501, SQLState: 42501
2018-11-17 15:42:43.294 ERROR 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : usuario no tiene privilegios suficientes o objeto no encontrado: OWNERS in statement [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]
2018-11-17 15:42:43.298  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@724cc353, testMethod = shouldFindSingleOwnerWithPet@ClinicServiceTests, testException = org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select owner0_.id as id1_1_0_, pets1_.id as id1_2_1_, owner0_.first_name as first_na2_1_0_, owner0_.last_name as last_nam3_1_0_, owner0_.address as address4_1_0_, owner0_.city as city5_1_0_, owner0_.telephone as telephon6_1_0_, pets1_.name as name2_2_1_, pets1_.birth_date as birth_da3_2_1_, pets1_.owner_id as owner_id4_2_1_, pets1_.type_id as type_id5_2_1_, pets1_.owner_id as owner_id4_2_0__, pets1_.id as id1_2_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement, mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  </testcase>
  <testcase name="shouldUpdatePetName" classname="org.springframework.samples.petclinic.service.ClinicServiceTests" time="0.041">
    <error message="could not prepare statement; SQL [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement" type="org.springframework.dao.InvalidDataAccessResourceUsageException">org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldUpdatePetName(ClinicServiceTests.java:175)
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldUpdatePetName(ClinicServiceTests.java:175)
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS in statement [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldUpdatePetName(ClinicServiceTests.java:175)
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldUpdatePetName(ClinicServiceTests.java:175)
</error>
    <system-out><![CDATA[2018-11-17 15:42:43.303  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@72ca2e32, testMethod = shouldUpdatePetName@ClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@36c8bb53]; rollback [true]
Hibernate: select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
2018-11-17 15:42:43.304  WARN 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: -5501, SQLState: 42501
2018-11-17 15:42:43.304 ERROR 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : usuario no tiene privilegios suficientes o objeto no encontrado: PETS in statement [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]
2018-11-17 15:42:43.308  INFO 8312 --- [           main] o.h.e.internal.DefaultLoadEventListener  : HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: could not prepare statement

org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:182) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:148) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.prepareQueryStatement(AbstractLoadPlanBasedLoader.java:226) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:190) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:121) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:86) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:188) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4269) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:511) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:481) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:222) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:281) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:124) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:92) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1257) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.access$1900(SessionImpl.java:207) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2874) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2848) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3483) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3452) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308) [spring-orm-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at com.sun.proxy.$Proxy167.find(Unknown Source) [na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:234) [spring-data-jpa-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59) ~[spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) ~[spring-tx-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61) ~[spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at com.sun.proxy.$Proxy169.findById(Unknown Source) ~[na:na]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldUpdatePetName(ClinicServiceTests.java:175) ~[test-classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) ~[surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) ~[surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) ~[surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) ~[surefire-booter-2.22.1.jar:2.22.1]
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS in statement [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.jdbc.JDBCPreparedStatement.<init>(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.jdbc.JDBCConnection.prepareStatement(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:146) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:172) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	... 87 common frames omitted
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS
	at org.hsqldb.error.Error.error(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.error.Error.error(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.readTableName(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.readTableOrSubquery(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadTableReference(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadFromClause(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadTableExpression(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQuerySpecification(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadSimpleTable(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryPrimary(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryTerm(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryExpressionBody(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryExpression(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.compileCursorSpecification(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserCommand.compilePart(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserCommand.compileStatement(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.Session.compileStatement(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.StatementManager.compile(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.Session.execute(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	... 91 common frames omitted

2018-11-17 15:42:43.311  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@72ca2e32, testMethod = shouldUpdatePetName@ClinicServiceTests, testException = org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement, mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  </testcase>
  <testcase name="shouldFindAllPetTypes" classname="org.springframework.samples.petclinic.service.ClinicServiceTests" time="0.008">
    <error message="could not prepare statement; SQL [select pettype0_.id as id1_4_, pettype0_.name as name2_4_ from types pettype0_ order by pettype0_.name]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement" type="org.springframework.dao.InvalidDataAccessResourceUsageException">org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select pettype0_.id as id1_4_, pettype0_.name as name2_4_ from types pettype0_ order by pettype0_.name]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindAllPetTypes(ClinicServiceTests.java:141)
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindAllPetTypes(ClinicServiceTests.java:141)
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: TYPES in statement [select pettype0_.id as id1_4_, pettype0_.name as name2_4_ from types pettype0_ order by pettype0_.name]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindAllPetTypes(ClinicServiceTests.java:141)
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: TYPES
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindAllPetTypes(ClinicServiceTests.java:141)
</error>
    <system-out><![CDATA[2018-11-17 15:42:43.315  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@35078679, testMethod = shouldFindAllPetTypes@ClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@36c8bb53]; rollback [true]
Hibernate: select pettype0_.id as id1_4_, pettype0_.name as name2_4_ from types pettype0_ order by pettype0_.name
2018-11-17 15:42:43.318  WARN 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: -5501, SQLState: 42501
2018-11-17 15:42:43.318 ERROR 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : usuario no tiene privilegios suficientes o objeto no encontrado: TYPES in statement [select pettype0_.id as id1_4_, pettype0_.name as name2_4_ from types pettype0_ order by pettype0_.name]
2018-11-17 15:42:43.320  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@35078679, testMethod = shouldFindAllPetTypes@ClinicServiceTests, testException = org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select pettype0_.id as id1_4_, pettype0_.name as name2_4_ from types pettype0_ order by pettype0_.name]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement, mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  </testcase>
  <testcase name="shouldFindPetWithCorrectId" classname="org.springframework.samples.petclinic.service.ClinicServiceTests" time="0.027">
    <error message="could not prepare statement; SQL [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement" type="org.springframework.dao.InvalidDataAccessResourceUsageException">org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindPetWithCorrectId(ClinicServiceTests.java:133)
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindPetWithCorrectId(ClinicServiceTests.java:133)
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS in statement [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindPetWithCorrectId(ClinicServiceTests.java:133)
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindPetWithCorrectId(ClinicServiceTests.java:133)
</error>
    <system-out><![CDATA[2018-11-17 15:42:43.324  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@77fca45, testMethod = shouldFindPetWithCorrectId@ClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@36c8bb53]; rollback [true]
Hibernate: select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
2018-11-17 15:42:43.326  WARN 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: -5501, SQLState: 42501
2018-11-17 15:42:43.326 ERROR 8312 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : usuario no tiene privilegios suficientes o objeto no encontrado: PETS in statement [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]
2018-11-17 15:42:43.327  INFO 8312 --- [           main] o.h.e.internal.DefaultLoadEventListener  : HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: could not prepare statement

org.hibernate.exception.SQLGrammarException: could not prepare statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:182) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:148) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.prepareQueryStatement(AbstractLoadPlanBasedLoader.java:226) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:190) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:121) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:86) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:188) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4269) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:511) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:481) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:222) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:281) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:124) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:92) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1257) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.access$1900(SessionImpl.java:207) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2874) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2848) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3483) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3452) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308) [spring-orm-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at com.sun.proxy.$Proxy167.find(Unknown Source) [na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:234) [spring-data-jpa-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595) [spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59) ~[spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) ~[spring-tx-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61) ~[spring-data-commons-2.1.2.RELEASE.jar:2.1.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at com.sun.proxy.$Proxy169.findById(Unknown Source) ~[na:na]
	at org.springframework.samples.petclinic.service.ClinicServiceTests.shouldFindPetWithCorrectId(ClinicServiceTests.java:133) ~[test-classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) ~[surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) ~[surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) ~[surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) ~[surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) ~[surefire-booter-2.22.1.jar:2.22.1]
Caused by: java.sql.SQLSyntaxErrorException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS in statement [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.jdbc.JDBCPreparedStatement.<init>(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.jdbc.JDBCConnection.prepareStatement(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:146) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:172) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	... 87 common frames omitted
Caused by: org.hsqldb.HsqlException: usuario no tiene privilegios suficientes o objeto no encontrado: PETS
	at org.hsqldb.error.Error.error(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.error.Error.error(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.readTableName(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.readTableOrSubquery(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadTableReference(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadFromClause(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadTableExpression(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQuerySpecification(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadSimpleTable(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryPrimary(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryTerm(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryExpressionBody(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.XreadQueryExpression(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserDQL.compileCursorSpecification(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserCommand.compilePart(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.ParserCommand.compileStatement(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.Session.compileStatement(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.StatementManager.compile(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	at org.hsqldb.Session.execute(Unknown Source) ~[hsqldb-2.4.1.jar:2.4.1]
	... 91 common frames omitted

2018-11-17 15:42:43.330  INFO 8312 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7981c652 testClass = ClinicServiceTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceTests@77fca45, testMethod = shouldFindPetWithCorrectId@ClinicServiceTests, testException = org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [select pet0_.id as id1_2_0_, pet0_.name as name2_2_0_, pet0_.birth_date as birth_da3_2_0_, pet0_.owner_id as owner_id4_2_0_, pet0_.type_id as type_id5_2_0_, owner1_.id as id1_1_1_, owner1_.first_name as first_na2_1_1_, owner1_.last_name as last_nam3_1_1_, owner1_.address as address4_1_1_, owner1_.city as city5_1_1_, owner1_.telephone as telephon6_1_1_, pettype2_.id as id1_4_2_, pettype2_.name as name2_4_2_, visits3_.pet_id as pet_id4_7_3_, visits3_.id as id1_7_3_, visits3_.id as id1_7_4_, visits3_.visit_date as visit_da2_7_4_, visits3_.description as descript3_7_4_, visits3_.pet_id as pet_id4_7_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement, mergedContextConfiguration = [MergedContextConfiguration@bae4fd8 testClass = ClinicServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetClinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@37cd9212 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4cb82b09, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434d001d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@7bd694a5, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6688057e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@5d07f7e1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10ba9780], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  </testcase>
</testsuite>